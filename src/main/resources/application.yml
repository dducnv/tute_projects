 spring:
  jackson:
    time-zone: Asia/Ho_Chi_Minh
  datasource:
#       url: jdbc:mysql://127.0.0.1:3306/tim_do?createDatabaseIfNotExist=true
#       username: root
#       password:
       url: jdbc:mysql://aws.connect.psdb.cloud/tute_project?sslMode=VERIFY_IDENTITY
       username: yjfn8jpypo8czybuztoq
       password: pscale_pw_sccX7zRXHeeRvQSBeYBcdPc6HbpuvcPPD3GFBqlHWQr
       driverClassName: com.mysql.cj.jdbc.Driver
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  mail:
    port: 587
    host: smtp.gmail.com
    username: plasform.viebio@gmail.com
    password: ursninxqucjgwjym
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: smtp.gmail.com
      starttls:
        enable: true
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 231594476721-09kl84i5027sobd67pnnmk5fke1hetfi.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "https://api-timdothatlac-enhfj.appengine.bfcplatform.vn/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 743050937261336
            clientSecret: 6978c5d20c9fad8cac6042989ffa4e48
            redirectUri: "https://api-timdothatlac-enhfj.appengine.bfcplatform.vn/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
 allowed:
   origin: http://localhost:3000

 app:
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/api/oauth2/redirect